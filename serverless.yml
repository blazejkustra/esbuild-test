service: test

package:
  individually: true

provider:
  name: aws
  deploymentMethod: direct
  runtime: nodejs16.x
  stage: staging
  versionFunctions: false

custom:
  esbuild:
    bundle: true
    minify: false
    packager: 'npm'
    external: ['puppeteer-core', '@sparticuz/chrome-aws-lambda']

plugins:
  - serverless-esbuild
  - serverless-offline

functions:
  test:
    role: TestRole
    handler: src/test.handler
    events:
      - http:
          path: /test
          method: GET

resources:
  Resources:
    TestRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        ManagedPolicyArns:
          - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        Policies:
          - PolicyName: root
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                  Resource:
                    - arn:aws:dynamodb:*:*:table/TestTable
